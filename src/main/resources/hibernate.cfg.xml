<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-configuration PUBLIC

		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"

		"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <property name = "hibernate.connection.driver_class">org.postgresql.Driver</property>

        <property name="connection.url">jdbc:postgresql://localhost:5432/courses_db</property>

        <property name="connection.username">dev_user</property>

        <property name="connection.password">1234</property>

		<!-- The SQL types not same for the all data bases, so that specific database will have specific dialect -->

        <property name = "hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</property>

        <!-- ddl.auto create ise uygulama her calistirildiginda schema yeniden olusur
        			  update ise schema silinmez degisiklik var ise guncellenir
        			  create-drop ise schemayi uygulama her calistirildiginda olusturur, uygulama sonlandiginda silinir
        			  validate ise schemayi validate yapar
        			  none ise yukaridakilerin hicbirini yapmaz			-->
        			  
        <property name="hbm2ddl.auto">update</property>

         <property name="show_sql">true</property> 

        <property name="format_sql">true</property>
        
        <!-- Second level cache`i aktive edecegimizi gosterir-->
        <property name="hibernate.cache.use_second_level_cache">true</property>
        
        <!-- Query cache`i aktive edecegimizi gosterir-->
        <property name="hibernate.cache.use_query_cache">true</property>
        
        <!-- Region olusturabilmek icin-->
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.internal.JCacheRegionFactory</property>
        
        <!-- Cache provider`i belirtmek icin -->
        <property name="hibernate.javax.cache.provider">org.ehcache.jsr107.EhcacheCachingProvider</property>
        
        <!--addAnnotatedClass(University.class).addAnnotatedClass(Student05.class); yerine bunlar yapilabilir-->
        <!-- 
        <mapping class="com.hb05.manytoone.Student05"/>
        <mapping class="com.hb05.manytoone.University"/>
        -->

    </session-factory>

</hibernate-configuration>